{"ast":null,"code":"import React,{useState}from'react';import'./Nutrition.css';import{mockNutritionData}from'../../data/mockData';import{readCSVFile,generateCSVTemplate}from'../../data/csvImport';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NutrientCard=_ref=>{let{title,value,unit,percentage,color}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"nutrient-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:title}),/*#__PURE__*/_jsxs(\"div\",{className:\"nutrient-value\",children:[value,/*#__PURE__*/_jsx(\"span\",{className:\"nutrient-unit\",children:unit})]}),percentage!==undefined&&/*#__PURE__*/_jsxs(\"div\",{className:\"nutrient-progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"nutrient-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"nutrient-fill\",style:{width:\"\".concat(percentage,\"%\"),backgroundColor:color}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"nutrient-percentage\",children:[percentage,\"% of daily goal\"]})]})]});};const Nutrition=()=>{const[nutritionData,setNutritionData]=useState(mockNutritionData);const[csvError,setCsvError]=useState(null);const[csvSuccess,setCsvSuccess]=useState(null);// Get the most recent nutrition day\nconst todayNutrition=nutritionData[nutritionData.length-1];// Calculate percentages for progress bars\nconst proteinPercentage=Math.min(Math.round(todayNutrition.protein/170*100),100);const carbsPercentage=Math.min(Math.round(todayNutrition.carbs/300*100),100);const fatPercentage=Math.min(Math.round(todayNutrition.fat/85*100),100);const fiberPercentage=Math.min(Math.round(todayNutrition.fiber/30*100),100);const vitaminDPercentage=Math.min(Math.round(todayNutrition.micronutrients.vitamin_d/20*100),100);const ironPercentage=Math.min(Math.round(todayNutrition.micronutrients.iron/18*100),100);const calciumPercentage=Math.min(Math.round(todayNutrition.micronutrients.calcium/1300*100),100);const potassiumPercentage=Math.min(Math.round(todayNutrition.micronutrients.potassium/3700*100),100);// Format date for display\nconst dateObj=new Date(todayNutrition.date);const formattedDate=dateObj.toLocaleDateString('en-US',{year:'numeric',month:'long',day:'numeric'});// Handle CSV file upload\nconst handleFileUpload=async event=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(!file)return;try{setCsvError(null);setCsvSuccess(null);const data=await readCSVFile(file);if(data.length===0){setCsvError(\"No valid nutrition data found in the CSV file.\");return;}setNutritionData(data);setCsvSuccess(\"Successfully imported \".concat(data.length,\" days of nutrition data.\"));}catch(error){setCsvError(\"Error importing CSV: \".concat(error instanceof Error?error.message:String(error)));}};// Download CSV template\nconst downloadTemplate=()=>{const template=generateCSVTemplate();const blob=new Blob([template],{type:'text/csv'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='nutrition_template.csv';document.body.appendChild(a);a.click();document.body.removeChild(a);URL.revokeObjectURL(url);};return/*#__PURE__*/_jsxs(\"div\",{className:\"nutrition-dashboard\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"nutrition-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Nutrition Overview\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"nutrition-date\",children:[\"Today: \",formattedDate]}),/*#__PURE__*/_jsxs(\"div\",{className:\"csv-import-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Import Nutrition Data\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Upload your standardized CSV file with daily nutrition entries.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"csv-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"template-button\",onClick:downloadTemplate,children:\"Download Template\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-upload\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"csv-upload\",children:\"Upload CSV File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"csv-upload\",accept:\".csv\",onChange:handleFileUpload})]})]}),csvError&&/*#__PURE__*/_jsx(\"div\",{className:\"csv-error\",children:csvError}),csvSuccess&&/*#__PURE__*/_jsx(\"div\",{className:\"csv-success\",children:csvSuccess})]}),/*#__PURE__*/_jsx(\"div\",{className:\"nutrition-summary\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"calorie-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"calorie-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Calorie Balance\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tss-indicator\",children:[\"TSS: \",todayNutrition.tss]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"calorie-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"calorie-consumed\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"calorie-value\",children:todayNutrition.calories_consumed}),/*#__PURE__*/_jsx(\"span\",{className:\"calorie-label\",children:\"Consumed\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"calorie-separator\",children:\"-\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"calorie-burned\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"calorie-value\",children:todayNutrition.calories_burned}),/*#__PURE__*/_jsx(\"span\",{className:\"calorie-label\",children:\"Burned\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"calorie-separator\",children:\"=\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"calorie-balance \".concat(todayNutrition.calories_consumed-todayNutrition.calories_burned<0?'negative':'positive'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"calorie-value\",children:todayNutrition.calories_consumed-todayNutrition.calories_burned}),/*#__PURE__*/_jsx(\"span\",{className:\"calorie-label\",children:\"Balance\"})]})]})]})}),/*#__PURE__*/_jsx(\"h3\",{className:\"subsection-title\",children:\"Macronutrients\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"nutrients-grid\",children:[/*#__PURE__*/_jsx(NutrientCard,{title:\"Protein\",value:todayNutrition.protein,unit:\"g\",percentage:proteinPercentage,color:\"#4CAF50\"}),/*#__PURE__*/_jsx(NutrientCard,{title:\"Carbohydrates\",value:todayNutrition.carbs,unit:\"g\",percentage:carbsPercentage,color:\"#2196F3\"}),/*#__PURE__*/_jsx(NutrientCard,{title:\"Fat\",value:todayNutrition.fat,unit:\"g\",percentage:fatPercentage,color:\"#FF9800\"}),/*#__PURE__*/_jsx(NutrientCard,{title:\"Fiber\",value:todayNutrition.fiber,unit:\"g\",percentage:fiberPercentage,color:\"#9C27B0\"})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"subsection-title\",children:\"Carbohydrate Details\"}),/*#__PURE__*/_jsx(\"div\",{className:\"carb-details\",children:/*#__PURE__*/_jsx(\"div\",{className:\"carb-chart\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-placeholder\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-note\",children:\"Carbohydrate breakdown chart\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-legend\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:'#2196F3'}}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-text\",children:[\"Simple Carbs: \",todayNutrition.carbs_simple,\"g (\",Math.round(todayNutrition.carbs_simple/todayNutrition.carbs*100),\"%)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:'#0D47A1'}}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-text\",children:[\"Complex Carbs: \",todayNutrition.carbs_complex,\"g (\",Math.round(todayNutrition.carbs_complex/todayNutrition.carbs*100),\"%)\"]})]})]})]})})}),/*#__PURE__*/_jsx(\"h3\",{className:\"subsection-title\",children:\"Micronutrients Highlights\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"micro-grid\",children:[/*#__PURE__*/_jsx(NutrientCard,{title:\"Vitamin D\",value:todayNutrition.micronutrients.vitamin_d,unit:\"\\u03BCg\",percentage:vitaminDPercentage,color:\"#E91E63\"}),/*#__PURE__*/_jsx(NutrientCard,{title:\"Iron\",value:todayNutrition.micronutrients.iron,unit:\"mg\",percentage:ironPercentage,color:\"#795548\"}),/*#__PURE__*/_jsx(NutrientCard,{title:\"Calcium\",value:todayNutrition.micronutrients.calcium,unit:\"mg\",percentage:calciumPercentage,color:\"#607D8B\"}),/*#__PURE__*/_jsx(NutrientCard,{title:\"Potassium\",value:todayNutrition.micronutrients.potassium,unit:\"mg\",percentage:potassiumPercentage,color:\"#FF5722\"})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"nutrition-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"TSS to Nutrition Correlation\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tss-chart\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-placeholder tall\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-note\",children:\"TSS to Nutrition Correlation Chart\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-description\",children:\"Shows relationship between Training Stress Score (TSS) and nutrition metrics over time\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"tss-insights\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"insight-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recovery Optimization\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Based on your TSS of \",todayNutrition.tss,\" today, your recommended recovery nutrition is:\"]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Protein: 30-40g within 30 minutes post-exercise\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Carbs: 80-100g within 2 hours post-exercise\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"insight-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Performance Trends\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your carbohydrate intake has been well-aligned with TSS over the past 2 weeks, supporting optimal performance and recovery.\"})]})]})]})]});};export default Nutrition;","map":{"version":3,"names":["React","useState","mockNutritionData","readCSVFile","generateCSVTemplate","jsx","_jsx","jsxs","_jsxs","NutrientCard","_ref","title","value","unit","percentage","color","className","children","undefined","style","width","concat","backgroundColor","Nutrition","nutritionData","setNutritionData","csvError","setCsvError","csvSuccess","setCsvSuccess","todayNutrition","length","proteinPercentage","Math","min","round","protein","carbsPercentage","carbs","fatPercentage","fat","fiberPercentage","fiber","vitaminDPercentage","micronutrients","vitamin_d","ironPercentage","iron","calciumPercentage","calcium","potassiumPercentage","potassium","dateObj","Date","date","formattedDate","toLocaleDateString","year","month","day","handleFileUpload","event","_event$target$files","file","target","files","data","error","Error","message","String","downloadTemplate","template","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","onClick","htmlFor","id","accept","onChange","tss","calories_consumed","calories_burned","carbs_simple","carbs_complex"],"sources":["C:/Users/Alessandro Merelli/Documents/GitHub/Sites/micmer.page/src/components/nutrition/Nutrition.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Nutrition.css';\nimport { mockNutritionData } from '../../data/mockData';\nimport { readCSVFile, generateCSVTemplate } from '../../data/csvImport';\n\ninterface NutrientCardProps {\n  title: string;\n  value: number;\n  unit: string;\n  percentage?: number;\n  color: string;\n}\n\nconst NutrientCard: React.FC<NutrientCardProps> = ({ title, value, unit, percentage, color }) => {\n  return (\n    <div className=\"nutrient-card\">\n      <h3>{title}</h3>\n      <div className=\"nutrient-value\">{value}<span className=\"nutrient-unit\">{unit}</span></div>\n      {percentage !== undefined && (\n        <div className=\"nutrient-progress\">\n          <div className=\"nutrient-bar\">\n            <div className=\"nutrient-fill\" style={{ width: `${percentage}%`, backgroundColor: color }}></div>\n          </div>\n          <div className=\"nutrient-percentage\">{percentage}% of daily goal</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst Nutrition: React.FC = () => {\n  const [nutritionData, setNutritionData] = useState(mockNutritionData);\n  const [csvError, setCsvError] = useState<string | null>(null);\n  const [csvSuccess, setCsvSuccess] = useState<string | null>(null);\n  \n  // Get the most recent nutrition day\n  const todayNutrition = nutritionData[nutritionData.length - 1];\n  \n  // Calculate percentages for progress bars\n  const proteinPercentage = Math.min(Math.round((todayNutrition.protein / 170) * 100), 100);\n  const carbsPercentage = Math.min(Math.round((todayNutrition.carbs / 300) * 100), 100);\n  const fatPercentage = Math.min(Math.round((todayNutrition.fat / 85) * 100), 100);\n  const fiberPercentage = Math.min(Math.round((todayNutrition.fiber / 30) * 100), 100);\n  \n  const vitaminDPercentage = Math.min(Math.round((todayNutrition.micronutrients.vitamin_d / 20) * 100), 100);\n  const ironPercentage = Math.min(Math.round((todayNutrition.micronutrients.iron / 18) * 100), 100);\n  const calciumPercentage = Math.min(Math.round((todayNutrition.micronutrients.calcium / 1300) * 100), 100);\n  const potassiumPercentage = Math.min(Math.round((todayNutrition.micronutrients.potassium / 3700) * 100), 100);\n  \n  // Format date for display\n  const dateObj = new Date(todayNutrition.date);\n  const formattedDate = dateObj.toLocaleDateString('en-US', { \n    year: 'numeric', \n    month: 'long', \n    day: 'numeric' \n  });\n  \n  // Handle CSV file upload\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n    \n    try {\n      setCsvError(null);\n      setCsvSuccess(null);\n      \n      const data = await readCSVFile(file);\n      if (data.length === 0) {\n        setCsvError(\"No valid nutrition data found in the CSV file.\");\n        return;\n      }\n      \n      setNutritionData(data);\n      setCsvSuccess(`Successfully imported ${data.length} days of nutrition data.`);\n    } catch (error) {\n      setCsvError(`Error importing CSV: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  };\n  \n  // Download CSV template\n  const downloadTemplate = () => {\n    const template = generateCSVTemplate();\n    const blob = new Blob([template], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'nutrition_template.csv';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  return (\n    <div className=\"nutrition-dashboard\">\n      <section className=\"nutrition-section\">\n        <h2 className=\"section-title\">Nutrition Overview</h2>\n        <div className=\"nutrition-date\">Today: {formattedDate}</div>\n        \n        <div className=\"csv-import-section\">\n          <h3>Import Nutrition Data</h3>\n          <p>Upload your standardized CSV file with daily nutrition entries.</p>\n          <div className=\"csv-controls\">\n            <button className=\"template-button\" onClick={downloadTemplate}>Download Template</button>\n            <div className=\"file-upload\">\n              <label htmlFor=\"csv-upload\">Upload CSV File</label>\n              <input \n                type=\"file\" \n                id=\"csv-upload\" \n                accept=\".csv\" \n                onChange={handleFileUpload} \n              />\n            </div>\n          </div>\n          {csvError && <div className=\"csv-error\">{csvError}</div>}\n          {csvSuccess && <div className=\"csv-success\">{csvSuccess}</div>}\n        </div>\n        \n        <div className=\"nutrition-summary\">\n          <div className=\"calorie-card\">\n            <div className=\"calorie-header\">\n              <h3>Calorie Balance</h3>\n              <div className=\"tss-indicator\">TSS: {todayNutrition.tss}</div>\n            </div>\n            <div className=\"calorie-content\">\n              <div className=\"calorie-consumed\">\n                <span className=\"calorie-value\">{todayNutrition.calories_consumed}</span>\n                <span className=\"calorie-label\">Consumed</span>\n              </div>\n              <div className=\"calorie-separator\">-</div>\n              <div className=\"calorie-burned\">\n                <span className=\"calorie-value\">{todayNutrition.calories_burned}</span>\n                <span className=\"calorie-label\">Burned</span>\n              </div>\n              <div className=\"calorie-separator\">=</div>\n              <div className={`calorie-balance ${todayNutrition.calories_consumed - todayNutrition.calories_burned < 0 ? 'negative' : 'positive'}`}>\n                <span className=\"calorie-value\">{todayNutrition.calories_consumed - todayNutrition.calories_burned}</span>\n                <span className=\"calorie-label\">Balance</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <h3 className=\"subsection-title\">Macronutrients</h3>\n        <div className=\"nutrients-grid\">\n          <NutrientCard \n            title=\"Protein\" \n            value={todayNutrition.protein} \n            unit=\"g\" \n            percentage={proteinPercentage} \n            color=\"#4CAF50\" \n          />\n          <NutrientCard \n            title=\"Carbohydrates\" \n            value={todayNutrition.carbs} \n            unit=\"g\" \n            percentage={carbsPercentage} \n            color=\"#2196F3\" \n          />\n          <NutrientCard \n            title=\"Fat\" \n            value={todayNutrition.fat} \n            unit=\"g\" \n            percentage={fatPercentage} \n            color=\"#FF9800\" \n          />\n          <NutrientCard \n            title=\"Fiber\" \n            value={todayNutrition.fiber} \n            unit=\"g\" \n            percentage={fiberPercentage} \n            color=\"#9C27B0\" \n          />\n        </div>\n        \n        <h3 className=\"subsection-title\">Carbohydrate Details</h3>\n        <div className=\"carb-details\">\n          <div className=\"carb-chart\">\n            <div className=\"chart-placeholder\">\n              <div className=\"chart-note\">Carbohydrate breakdown chart</div>\n              <div className=\"chart-legend\">\n                <div className=\"legend-item\">\n                  <div className=\"legend-color\" style={{ backgroundColor: '#2196F3' }}></div>\n                  <div className=\"legend-text\">Simple Carbs: {todayNutrition.carbs_simple}g ({Math.round((todayNutrition.carbs_simple / todayNutrition.carbs) * 100)}%)</div>\n                </div>\n                <div className=\"legend-item\">\n                  <div className=\"legend-color\" style={{ backgroundColor: '#0D47A1' }}></div>\n                  <div className=\"legend-text\">Complex Carbs: {todayNutrition.carbs_complex}g ({Math.round((todayNutrition.carbs_complex / todayNutrition.carbs) * 100)}%)</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <h3 className=\"subsection-title\">Micronutrients Highlights</h3>\n        <div className=\"micro-grid\">\n          <NutrientCard \n            title=\"Vitamin D\" \n            value={todayNutrition.micronutrients.vitamin_d} \n            unit=\"μg\" \n            percentage={vitaminDPercentage} \n            color=\"#E91E63\" \n          />\n          <NutrientCard \n            title=\"Iron\" \n            value={todayNutrition.micronutrients.iron} \n            unit=\"mg\" \n            percentage={ironPercentage} \n            color=\"#795548\" \n          />\n          <NutrientCard \n            title=\"Calcium\" \n            value={todayNutrition.micronutrients.calcium} \n            unit=\"mg\" \n            percentage={calciumPercentage} \n            color=\"#607D8B\" \n          />\n          <NutrientCard \n            title=\"Potassium\" \n            value={todayNutrition.micronutrients.potassium} \n            unit=\"mg\" \n            percentage={potassiumPercentage} \n            color=\"#FF5722\" \n          />\n        </div>\n      </section>\n      \n      <section className=\"nutrition-section\">\n        <h2 className=\"section-title\">TSS to Nutrition Correlation</h2>\n        <div className=\"tss-chart\">\n          <div className=\"chart-placeholder tall\">\n            <div className=\"chart-note\">TSS to Nutrition Correlation Chart</div>\n            <div className=\"chart-description\">\n              Shows relationship between Training Stress Score (TSS) and nutrition metrics over time\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"tss-insights\">\n          <div className=\"insight-card\">\n            <h3>Recovery Optimization</h3>\n            <p>Based on your TSS of {todayNutrition.tss} today, your recommended recovery nutrition is:</p>\n            <ul>\n              <li>Protein: 30-40g within 30 minutes post-exercise</li>\n              <li>Carbs: 80-100g within 2 hours post-exercise</li>\n            </ul>\n          </div>\n          \n          <div className=\"insight-card\">\n            <h3>Performance Trends</h3>\n            <p>Your carbohydrate intake has been well-aligned with TSS over the past 2 weeks, supporting optimal performance and recovery.</p>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Nutrition;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}