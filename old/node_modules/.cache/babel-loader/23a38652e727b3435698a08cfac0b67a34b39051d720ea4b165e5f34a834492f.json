{"ast":null,"code":"import React,{useState}from'react';import'./Dashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StatCard=_ref=>{let{icon,value,label,subtext}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:icon}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:value}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:label}),subtext&&/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtext\",children:subtext})]});};const Dashboard=()=>{const[selectedYear,setSelectedYear]=useState('all');const[selectedTab,setSelectedTab]=useState('overview');// Get all available years\nconst years=getAllYears();// Get stats based on selected year\nconst stats=selectedYear==='all'?getTotalStats():getYearlyStats(selectedYear)||getTotalStats();// Calculate statistics from yearly data\nconst totalActivities=stats.activities.total;const totalDistance=stats.distance.total/1000;// Convert to km\nconst totalTimeHours=stats.time.total/3600;// Convert to hours\nconst totalElevation=stats.elevation.total;const totalCalories=stats.calories.total;const socialPercentage=stats.social_percentage;const daysActive=stats.days_active;// Calculate sport-specific stats\nconst runActivities=stats.activities.run;const runDistance=stats.distance.run/1000;const runTime=stats.time.run/3600;const rideActivities=stats.activities.ride;const rideDistance=stats.distance.ride/1000;const rideTime=stats.time.ride/3600;const swimActivities=stats.activities.swim;const swimDistance=stats.distance.swim/1000;const swimTime=stats.time.swim/3600;// Calculate percentage of days active in the year\nconst daysInYear=selectedYear==='all'?365*years.length:365;const daysActivePercentage=(daysActive/daysInYear*100).toFixed(1);return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"dashboard-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Activity Life Overview\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:'12.1%'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-text\",children:\"12.1% to 10,000 hours\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDCC5\",value:\"2021\",label:\"Year Started\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83C\\uDFC3\",value:totalActivities,label:\"Total Activities\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u23F1\\uFE0F\",value:totalTimeHours.toFixed(1),label:\"Time Active\",subtext:\"hours\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83C\\uDF0D\",value:years.length,label:\"Years Active\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDEE3\\uFE0F\",value:\"42\",label:\"Favorite Routes\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDC5F\",value:\"5\",label:\"Shoes Worn Out\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83C\\uDFAF\",value:\"Sub 3:30\",label:\"Next Goal\",subtext:\"Marathon\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83C\\uDFC6\",value:\"Boston\",label:\"Dream Achievement\",subtext:\"Marathon Qualifier\"})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"dashboard-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Yearly Stats\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab \".concat(selectedTab==='overview'?'active':''),onClick:()=>setSelectedTab('overview'),children:\"Overview\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab \".concat(selectedTab==='running'?'active':''),onClick:()=>setSelectedTab('running'),children:\"Running\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab \".concat(selectedTab==='cycling'?'active':''),onClick:()=>setSelectedTab('cycling'),children:\"Cycling\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab \".concat(selectedTab==='swimming'?'active':''),onClick:()=>setSelectedTab('swimming'),children:\"Swimming\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab \".concat(selectedTab==='nutrition'?'active':''),onClick:()=>setSelectedTab('nutrition'),children:\"Nutrition\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"year-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab year-tab \".concat(selectedYear==='all'?'active':''),onClick:()=>setSelectedYear('all'),children:\"All Time\"}),years.map(year=>/*#__PURE__*/_jsx(\"button\",{className:\"tab year-tab \".concat(selectedYear===year?'active':''),onClick:()=>setSelectedYear(year),children:year},year))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[selectedTab==='overview'&&/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDCC5\",value:daysActive,label:\"Days Active\",subtext:\"\".concat(daysActivePercentage,\"% of days\")}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u23F1\\uFE0F\",value:totalTimeHours.toFixed(1),label:\"Hours Active\",subtext:\"\".concat((totalTimeHours/(24*daysInYear)*100).toFixed(1),\"% of time\")}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83C\\uDFC3\",value:totalActivities,label:\"Total Activities\",subtext:\"\".concat((totalActivities/daysActive).toFixed(1),\" per active day\")}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDC65\",value:\"\".concat(socialPercentage.toFixed(1),\"%\"),label:\"Social Activities\",subtext:\"sessions with friends\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDD25\",value:formatCalories(totalCalories),label:\"Calories Burned\",subtext:\"\".concat((totalCalories/daysActive).toFixed(0),\" per active day\")}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u26F0\\uFE0F\",value:formatElevation(totalElevation),label:\"Elevation Gain\",subtext:\"meters climbed\"})]}),selectedTab==='running'&&/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83C\\uDFC3\",value:runActivities,label:\"Runs\",subtext:\"\".concat((runActivities/totalActivities*100).toFixed(1),\"% of activities\")}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDEE3\\uFE0F\",value:runDistance.toFixed(1),label:\"Distance\",subtext:\"kilometers\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u23F1\\uFE0F\",value:runTime.toFixed(1),label:\"Time\",subtext:\"hours\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u26F0\\uFE0F\",value:formatElevation(stats.elevation.run),label:\"Elevation\",subtext:\"meters climbed\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDD25\",value:formatCalories(stats.calories.run),label:\"Calories\",subtext:\"burned running\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u26A1\",value:\"4:22\",label:\"Avg Pace\",subtext:\"min/km\"})]}),selectedTab==='cycling'&&/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDEB4\",value:rideActivities,label:\"Rides\",subtext:\"\".concat((rideActivities/totalActivities*100).toFixed(1),\"% of activities\")}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDEE3\\uFE0F\",value:rideDistance.toFixed(1),label:\"Distance\",subtext:\"kilometers\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u23F1\\uFE0F\",value:rideTime.toFixed(1),label:\"Time\",subtext:\"hours\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u26F0\\uFE0F\",value:formatElevation(stats.elevation.ride),label:\"Elevation\",subtext:\"meters climbed\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDD25\",value:formatCalories(stats.calories.ride),label:\"Calories\",subtext:\"burned cycling\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u26A1\",value:\"25.2\",label:\"Avg Speed\",subtext:\"km/h\"})]}),selectedTab==='swimming'&&/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83C\\uDFCA\",value:swimActivities,label:\"Swims\",subtext:\"\".concat((swimActivities/totalActivities*100).toFixed(1),\"% of activities\")}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDEE3\\uFE0F\",value:swimDistance.toFixed(1),label:\"Distance\",subtext:\"kilometers\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u23F1\\uFE0F\",value:swimTime.toFixed(1),label:\"Time\",subtext:\"hours\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDD25\",value:formatCalories(stats.calories.swim),label:\"Calories\",subtext:\"burned swimming\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\u26A1\",value:\"2:15\",label:\"Avg Pace\",subtext:\"min/100m\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83C\\uDFCA\",value:\"42\",label:\"Pool Sessions\",subtext:\"\".concat((42/swimActivities*100).toFixed(1),\"% of swims\")})]}),selectedTab==='nutrition'&&/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83C\\uDF7D\\uFE0F\",value:formatCalories(totalCalories),label:\"Calories Burned\",subtext:\"through activities\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83E\\uDD69\",value:\"155\",label:\"Avg Protein\",subtext:\"grams per day\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83C\\uDF5A\",value:\"320\",label:\"Avg Carbs\",subtext:\"grams per day\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83E\\uDD51\",value:\"65\",label:\"Avg Fat\",subtext:\"grams per day\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83E\\uDD66\",value:\"28\",label:\"Avg Fiber\",subtext:\"grams per day\"}),/*#__PURE__*/_jsx(StatCard,{icon:\"\\uD83D\\uDCCA\",value:stats.tss,label:\"Total TSS\",subtext:\"training stress\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Sessions Calendar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"calendar-placeholder\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-note\",children:[\"Activity frequency heatmap - Avg: \",(totalActivities/daysActive).toFixed(1),\" per active day\"]})})]})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"dashboard-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Progress & Goals\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"goal-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[selectedYear==='all'?'Lifetime':selectedYear,\" Running Goal (1,000 km)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"status-badge on-track\",children:\"On Track\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Progress toward 1,000 km\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat((runDistance/10).toFixed(1),\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"goal-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[runDistance.toFixed(1),\" km\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[runActivities,\" activities\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"goal-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[selectedYear==='all'?'Lifetime':selectedYear,\" Cycling Goal (5,000 km)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"status-badge behind\",children:\"Slightly Behind\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Progress toward 5,000 km\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat((rideDistance/50).toFixed(1),\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"goal-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[rideDistance.toFixed(1),\" km\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[rideActivities,\" activities\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"goal-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[selectedYear==='all'?'Lifetime':selectedYear,\" Swimming Goal (100 km)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"status-badge on-track\",children:\"On Track\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Progress toward 100 km\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(swimDistance.toFixed(1),\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"goal-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[swimDistance.toFixed(1),\" km\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[swimActivities,\" activities\"]})]})]})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","StatCard","_ref","icon","value","label","subtext","className","children","Dashboard","selectedYear","setSelectedYear","selectedTab","setSelectedTab","years","getAllYears","stats","getTotalStats","getYearlyStats","totalActivities","activities","total","totalDistance","distance","totalTimeHours","time","totalElevation","elevation","totalCalories","calories","socialPercentage","social_percentage","daysActive","days_active","runActivities","run","runDistance","runTime","rideActivities","ride","rideDistance","rideTime","swimActivities","swim","swimDistance","swimTime","daysInYear","length","daysActivePercentage","toFixed","style","width","concat","onClick","map","year","formatCalories","formatElevation","tss"],"sources":["C:/Users/Alessandro Merelli/Documents/GitHub/Sites/micmer.page/src/components/dashboard/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Dashboard.css';\nimport { mockStravaActivities, calculateTotalDistance, calculateTotalTime, calculateTotalElevation, calculateTotalCalories, getUniqueCountries, getSocialActivitiesPercentage } from '../../data/mockData';\n\n\ninterface StatCardProps {\n  icon: string;\n  value: string | number;\n  label: string;\n  subtext?: string;\n}\n\nconst StatCard: React.FC<StatCardProps> = ({ icon, value, label, subtext }) => {\n  return (\n    <div className=\"stat-card\">\n      <div className=\"stat-icon\">{icon}</div>\n      <div className=\"stat-value\">{value}</div>\n      <div className=\"stat-label\">{label}</div>\n      {subtext && <div className=\"stat-subtext\">{subtext}</div>}\n    </div>\n  );\n};\n\nconst Dashboard: React.FC = () => {\n  const [selectedYear, setSelectedYear] = useState<number | 'all'>('all');\n  const [selectedTab, setSelectedTab] = useState<'overview' | 'running' | 'cycling' | 'swimming' | 'nutrition'>('overview');\n  \n  // Get all available years\n  const years = getAllYears();\n  \n  // Get stats based on selected year\n  const stats = selectedYear === 'all' ? getTotalStats() : getYearlyStats(selectedYear as number) || getTotalStats();\n  \n  // Calculate statistics from yearly data\n  const totalActivities = stats.activities.total;\n  const totalDistance = stats.distance.total / 1000; // Convert to km\n  const totalTimeHours = stats.time.total / 3600; // Convert to hours\n  const totalElevation = stats.elevation.total;\n  const totalCalories = stats.calories.total;\n  const socialPercentage = stats.social_percentage;\n  const daysActive = stats.days_active;\n  \n  // Calculate sport-specific stats\n  const runActivities = stats.activities.run;\n  const runDistance = stats.distance.run / 1000;\n  const runTime = stats.time.run / 3600;\n  \n  const rideActivities = stats.activities.ride;\n  const rideDistance = stats.distance.ride / 1000;\n  const rideTime = stats.time.ride / 3600;\n  \n  const swimActivities = stats.activities.swim;\n  const swimDistance = stats.distance.swim / 1000;\n  const swimTime = stats.time.swim / 3600;\n  \n  // Calculate percentage of days active in the year\n  const daysInYear = selectedYear === 'all' ? 365 * years.length : 365;\n  const daysActivePercentage = ((daysActive / daysInYear) * 100).toFixed(1);\n  \n  return (\n    <div className=\"dashboard\">\n      <section className=\"dashboard-section\">\n        <h2 className=\"section-title\">Activity Life Overview</h2>\n        <div className=\"progress-container\">\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\" style={{ width: '12.1%' }}></div>\n          </div>\n          <div className=\"progress-text\">12.1% to 10,000 hours</div>\n        </div>\n        \n        <div className=\"stats-grid\">\n          <StatCard \n            icon=\"📅\" \n            value=\"2021\" \n            label=\"Year Started\" \n          />\n          <StatCard \n            icon=\"🏃\" \n            value={totalActivities} \n            label=\"Total Activities\" \n          />\n          <StatCard \n            icon=\"⏱️\" \n            value={totalTimeHours.toFixed(1)} \n            label=\"Time Active\" \n            subtext=\"hours\"\n          />\n          <StatCard \n            icon=\"🌍\" \n            value={years.length} \n            label=\"Years Active\" \n          />\n          <StatCard \n            icon=\"🛣️\" \n            value=\"42\" \n            label=\"Favorite Routes\" \n          />\n          <StatCard \n            icon=\"👟\" \n            value=\"5\" \n            label=\"Shoes Worn Out\" \n          />\n          <StatCard \n            icon=\"🎯\" \n            value=\"Sub 3:30\" \n            label=\"Next Goal\" \n            subtext=\"Marathon\"\n          />\n          <StatCard \n            icon=\"🏆\" \n            value=\"Boston\" \n            label=\"Dream Achievement\" \n            subtext=\"Marathon Qualifier\"\n          />\n        </div>\n      </section>\n\n      <section className=\"dashboard-section\">\n        <h2 className=\"section-title\">Yearly Stats</h2>\n        <div className=\"tabs\">\n          <button \n            className={`tab ${selectedTab === 'overview' ? 'active' : ''}`}\n            onClick={() => setSelectedTab('overview')}\n          >\n            Overview\n          </button>\n          <button \n            className={`tab ${selectedTab === 'running' ? 'active' : ''}`}\n            onClick={() => setSelectedTab('running')}\n          >\n            Running\n          </button>\n          <button \n            className={`tab ${selectedTab === 'cycling' ? 'active' : ''}`}\n            onClick={() => setSelectedTab('cycling')}\n          >\n            Cycling\n          </button>\n          <button \n            className={`tab ${selectedTab === 'swimming' ? 'active' : ''}`}\n            onClick={() => setSelectedTab('swimming')}\n          >\n            Swimming\n          </button>\n          <button \n            className={`tab ${selectedTab === 'nutrition' ? 'active' : ''}`}\n            onClick={() => setSelectedTab('nutrition')}\n          >\n            Nutrition\n          </button>\n          \n          <div className=\"year-tabs\">\n            <button \n              className={`tab year-tab ${selectedYear === 'all' ? 'active' : ''}`}\n              onClick={() => setSelectedYear('all')}\n            >\n              All Time\n            </button>\n            {years.map(year => (\n              <button \n                key={year}\n                className={`tab year-tab ${selectedYear === year ? 'active' : ''}`}\n                onClick={() => setSelectedYear(year)}\n              >\n                {year}\n              </button>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"tab-content\">\n          {selectedTab === 'overview' && (\n            <div className=\"stats-grid\">\n              <StatCard \n                icon=\"📅\" \n                value={daysActive} \n                label=\"Days Active\" \n                subtext={`${daysActivePercentage}% of days`}\n              />\n              <StatCard \n                icon=\"⏱️\" \n                value={totalTimeHours.toFixed(1)} \n                label=\"Hours Active\" \n                subtext={`${(totalTimeHours / (24 * daysInYear) * 100).toFixed(1)}% of time`}\n              />\n              <StatCard \n                icon=\"🏃\" \n                value={totalActivities} \n                label=\"Total Activities\" \n                subtext={`${(totalActivities / daysActive).toFixed(1)} per active day`}\n              />\n              <StatCard \n                icon=\"👥\" \n                value={`${socialPercentage.toFixed(1)}%`} \n                label=\"Social Activities\" \n                subtext=\"sessions with friends\"\n              />\n              <StatCard \n                icon=\"🔥\" \n                value={formatCalories(totalCalories)} \n                label=\"Calories Burned\" \n                subtext={`${(totalCalories / daysActive).toFixed(0)} per active day`}\n              />\n              <StatCard \n                icon=\"⛰️\" \n                value={formatElevation(totalElevation)} \n                label=\"Elevation Gain\" \n                subtext=\"meters climbed\"\n              />\n            </div>\n          )}\n          \n          {selectedTab === 'running' && (\n            <div className=\"stats-grid\">\n              <StatCard \n                icon=\"🏃\" \n                value={runActivities} \n                label=\"Runs\" \n                subtext={`${(runActivities / totalActivities * 100).toFixed(1)}% of activities`}\n              />\n              <StatCard \n                icon=\"🛣️\" \n                value={runDistance.toFixed(1)} \n                label=\"Distance\" \n                subtext=\"kilometers\"\n              />\n              <StatCard \n                icon=\"⏱️\" \n                value={runTime.toFixed(1)} \n                label=\"Time\" \n                subtext=\"hours\"\n              />\n              <StatCard \n                icon=\"⛰️\" \n                value={formatElevation(stats.elevation.run)} \n                label=\"Elevation\" \n                subtext=\"meters climbed\"\n              />\n              <StatCard \n                icon=\"🔥\" \n                value={formatCalories(stats.calories.run)} \n                label=\"Calories\" \n                subtext=\"burned running\"\n              />\n              <StatCard \n                icon=\"⚡\" \n                value=\"4:22\" \n                label=\"Avg Pace\" \n                subtext=\"min/km\"\n              />\n            </div>\n          )}\n          \n          {selectedTab === 'cycling' && (\n            <div className=\"stats-grid\">\n              <StatCard \n                icon=\"🚴\" \n                value={rideActivities} \n                label=\"Rides\" \n                subtext={`${(rideActivities / totalActivities * 100).toFixed(1)}% of activities`}\n              />\n              <StatCard \n                icon=\"🛣️\" \n                value={rideDistance.toFixed(1)} \n                label=\"Distance\" \n                subtext=\"kilometers\"\n              />\n              <StatCard \n                icon=\"⏱️\" \n                value={rideTime.toFixed(1)} \n                label=\"Time\" \n                subtext=\"hours\"\n              />\n              <StatCard \n                icon=\"⛰️\" \n                value={formatElevation(stats.elevation.ride)} \n                label=\"Elevation\" \n                subtext=\"meters climbed\"\n              />\n              <StatCard \n                icon=\"🔥\" \n                value={formatCalories(stats.calories.ride)} \n                label=\"Calories\" \n                subtext=\"burned cycling\"\n              />\n              <StatCard \n                icon=\"⚡\" \n                value=\"25.2\" \n                label=\"Avg Speed\" \n                subtext=\"km/h\"\n              />\n            </div>\n          )}\n          \n          {selectedTab === 'swimming' && (\n            <div className=\"stats-grid\">\n              <StatCard \n                icon=\"🏊\" \n                value={swimActivities} \n                label=\"Swims\" \n                subtext={`${(swimActivities / totalActivities * 100).toFixed(1)}% of activities`}\n              />\n              <StatCard \n                icon=\"🛣️\" \n                value={swimDistance.toFixed(1)} \n                label=\"Distance\" \n                subtext=\"kilometers\"\n              />\n              <StatCard \n                icon=\"⏱️\" \n                value={swimTime.toFixed(1)} \n                label=\"Time\" \n                subtext=\"hours\"\n              />\n              <StatCard \n                icon=\"🔥\" \n                value={formatCalories(stats.calories.swim)} \n                label=\"Calories\" \n                subtext=\"burned swimming\"\n              />\n              <StatCard \n                icon=\"⚡\" \n                value=\"2:15\" \n                label=\"Avg Pace\" \n                subtext=\"min/100m\"\n              />\n              <StatCard \n                icon=\"🏊\" \n                value=\"42\" \n                label=\"Pool Sessions\" \n                subtext={`${(42 / swimActivities * 100).toFixed(1)}% of swims`}\n              />\n            </div>\n          )}\n          \n          {selectedTab === 'nutrition' && (\n            <div className=\"stats-grid\">\n              <StatCard \n                icon=\"🍽️\" \n                value={formatCalories(totalCalories)} \n                label=\"Calories Burned\" \n                subtext=\"through activities\"\n              />\n              <StatCard \n                icon=\"🥩\" \n                value=\"155\" \n                label=\"Avg Protein\" \n                subtext=\"grams per day\"\n              />\n              <StatCard \n                icon=\"🍚\" \n                value=\"320\" \n                label=\"Avg Carbs\" \n                subtext=\"grams per day\"\n              />\n              <StatCard \n                icon=\"🥑\" \n                value=\"65\" \n                label=\"Avg Fat\" \n                subtext=\"grams per day\"\n              />\n              <StatCard \n                icon=\"🥦\" \n                value=\"28\" \n                label=\"Avg Fiber\" \n                subtext=\"grams per day\"\n              />\n              <StatCard \n                icon=\"📊\" \n                value={stats.tss} \n                label=\"Total TSS\" \n                subtext=\"training stress\"\n              />\n            </div>\n          )}\n          \n          <div className=\"calendar-container\">\n            <h3>Sessions Calendar</h3>\n            <div className=\"calendar-placeholder\">\n              {/* Calendar heatmap will be implemented with actual data */}\n              <div className=\"calendar-note\">Activity frequency heatmap - Avg: {(totalActivities / daysActive).toFixed(1)} per active day</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"dashboard-section\">\n        <h2 className=\"section-title\">Progress & Goals</h2>\n        \n        <div className=\"goal-card\">\n          <h3>{selectedYear === 'all' ? 'Lifetime' : selectedYear} Running Goal (1,000 km)</h3>\n          <div className=\"status-badge on-track\">On Track</div>\n          <p>Progress toward 1,000 km</p>\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\" style={{ width: `${(runDistance / 10).toFixed(1)}%` }}></div>\n          </div>\n          <div className=\"goal-stats\">\n            <div>{runDistance.toFixed(1)} km</div>\n            <div>{runActivities} activities</div>\n          </div>\n        </div>\n        \n        <div className=\"goal-card\">\n          <h3>{selectedYear === 'all' ? 'Lifetime' : selectedYear} Cycling Goal (5,000 km)</h3>\n          <div className=\"status-badge behind\">Slightly Behind</div>\n          <p>Progress toward 5,000 km</p>\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\" style={{ width: `${(rideDistance / 50).toFixed(1)}%` }}></div>\n          </div>\n          <div className=\"goal-stats\">\n            <div>{rideDistance.toFixed(1)} km</div>\n            <div>{rideActivities} activities</div>\n          </div>\n        </div>\n        \n        <div className=\"goal-card\">\n          <h3>{selectedYear === 'all' ? 'Lifetime' : selectedYear} Swimming Goal (100 km)</h3>\n          <div className=\"status-badge on-track\">On Track</div>\n          <p>Progress toward 100 km</p>\n          <div className=\"progress-bar\">\n            <div className=\"progress-fill\" style={{ width: `${(swimDistance).toFixed(1)}%` }}></div>\n          </div>\n          <div className=\"goal-stats\">\n            <div>{swimDistance.toFixed(1)} km</div>\n            <div>{swimActivities} activities</div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}